name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-12, windows-latest]
    steps:
    - name: Set up Go >=1.19
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.19.0'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#            dep ensure
#        fi

    - name: Build
      run: go build -ldflags="-s -w" -v .

    # - name: Test
    #   run: go test -v .
    
    - name: Upload a Build Artifact (Linux)
      uses: actions/upload-artifact@v3
      if: ${{ success() && matrix.os == 'ubuntu-20.04' }}
      with:
        # Artifact name
        name: octyne-linux # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: octyne
        # The desired behavior if no files are found using the provided path.

    - name: Upload a Build Artifact (macOS)
      uses: actions/upload-artifact@v3
      if: ${{ success() && matrix.os == 'macos-12' }}
      with:
        name: octyne-macos
        path: octyne

    - name: Upload a Build Artifact (Windows)
      uses: actions/upload-artifact@v3
      if: ${{ success() && matrix.os == 'windows-latest' }}
      with:
        name: octyne-windows
        path: octyne.exe
